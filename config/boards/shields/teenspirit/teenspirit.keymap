#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <zephyr/dt-bindings/pwm/pwm.h>

#define APT 0
#define NUM 1
#define NAV 2
#define SYM 3
#define FUN 4
#define BUZ 5
/* NEW: Add a new define for the BT layer */
#define BT 6

// &lt {
//     quick_tap_ms = <170>;
// };

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC LSHFT RSHFT>;
};

/ {
    macros {
        // promising candidate, only problem: impossible to hold shift through
        // the activation and still have it registered as held afterwards
        macro_shiftable_sch: macro_shiftable_sch {
            label = "Macro_shiftable_sch";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &macro_tap &kp S
                &macro_release &kp RSHIFT
                &macro_tap &kp C &kp H
            >;
            tap-ms = <10>;
        };
    };
};

#define COMBO(NAME, BINDINGS, KEYPOS) \
combo_##NAME { \
    timeout-ms = <20>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};
#define SLOWCOMBO(NAME, BINDINGS, KEYPOS) \
combo_##NAME { \
    timeout-ms = <40>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};
#define TCOMBO(NAME, BINDINGS, KEYPOS, TIMEOUT) \
combo_##NAME { \
    timeout-ms = <TIMEOUT>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};

#define COMBOS_TOP_ROW(LTPR, LTRM, LTMI, MTII, RTIM, RTMR, RTRP) \
    SLOWCOMBO(_ltpr, LTPR, 0 1) \
    COMBO(_ltrm, LTRM, 1 2) \
    COMBO(_ltmi, LTMI, 2 3) \
    SLOWCOMBO(_mtii, MTII, 3 4) \
    COMBO(_rtim, RTIM, 4 5) \
    COMBO(_rtmr, RTMR, 5 6) \
    SLOWCOMBO(_rtrp, RTRP, 6 7)

#define COMBOS_BOT_ROW(LBRM, LBMI, MBII, RBIM, RBMR) \
    COMBO(_lbrm, LBRM, 8 9) \
    COMBO(_lbmi, LBMI, 9 10) \
    SLOWCOMBO(_mbii, MBII, 10 11) \
    COMBO(_rbim, RBIM, 11 12) \
    COMBO(_rbmr, RBMR, 12 13)

//  _______________________  _______________________
// |  0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7 |
//       \  8  |  9  | 10  /\  11 |  12 |  13 /
//             \ 14  | 15 /  \ 16 |  17 /
//              ----------    ----------

/ {
    combos {
        compatible = "zmk,combos";
        /* alphas */
        //  0+1    1+2    2+3    3+4    4+5      5+6      6+7
        COMBOS_TOP_ROW(&kp W, &kp M, &kp B, &kp K, &kp V, &comsem, &dotcol)
        COMBOS_BOT_ROW(&kp F, &kp P, &kp J, &kp X, &kp Z)
        //  8+9   9+10  10+11  11+12  12+13

        /* usually on base layer */
        COMBO(q, &kp Q, 8 10)
        COMBO(k, &kp K, 14 15)
        COMBO(j, &kp J, 16 17)
        COMBO(shiftablesch, &macro_shiftable_sch, 1 3)
        COMBO(enter, &kp ENTER, 11 13)
        COMBO(esc, &kp ESC, 0 3)
        COMBO(semi, &kp SEMICOLON, 12 17)
        COMBO(colon, &kp COLON, 13 17)
        COMBO(minus, &kp MINUS, 11 12 17)
        COMBO(slash, &kp SLASH, 12 13 17)
        COMBO(esc2, &kp ESC, 9 10 14)

        /* parentheticals */
        COMBO(lt, &kp LT, 1 10)
        COMBO(lbrc, &kp LBRC, 1 8)
        COMBO(lbkt, &kp LBKT, 2 9)
        COMBO(lpar, &kp LPAR, 3 10)
        COMBO(rt, &kp GT, 6 11)
        COMBO(rpar, &kp RPAR, 4 11)
        COMBO(rbkt, &kp RBKT, 5 12)
        COMBO(rbrc, &kp RBRC, 6 13)

        /* caps */
        COMBO(caps, &caps_word, 2 5)
        COMBO(capslock, &kp CAPSLOCK, 1 6)

        /* deletion */
        COMBO(bspc, &kp BSPC, 4 6)
        SLOWCOMBO(del, &kp DEL, 5 7)
        COMBO(delword, &kp LC(BSPC), 4 7)

        /* music */
        // Commented out the toggling of BUZ layer to remove PWM references:
        // SLOWCOMBO(music, &tog BUZ, 0 7 14 17)

        /*
         * NEW: Toggle the BT layer by pressing R (position 0) + O (position 7).
         * Using SLOWCOMBO so it's more forgiving on timing if you truly "hold".
         */
        SLOWCOMBO(bt, &tog BT, 0 7)
    };
};

//  _______________________  _______________________
// |  0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7 |
//       \  8  |  9  | 10  /\  11 |  12 |  13 /
//             \ 14  | 15 /  \ 16 |  17 /
//              ----------    ----------

/ {
    behaviors {
        hl: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods left";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <4 5 6 7 11 12 13 14 15 16 17>;
        };
        hr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods right";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <0 1 2 3 8 9 10 14 15 16 17>;
        };

        my_lt: my_layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "my layer taps";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            // flavor = "balanced";
            tapping-term-ms = <160>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&mo &kp>, <&kp>;
            // non-thumb keys
            // hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13>;
        };

        dotcol: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COL";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comsem: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COM_SEM";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Buzzer config block commented out to remove PWM references:
        // tone: tone {
        //     compatible = "chiptuner,behavior-tone";
        //     #binding-cells = <1>;
        //     pwms = <&pwm 10 PWM_USEC(20) PWM_POLARITY_NORMAL>;
        // };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        aptmak {
            label = "APT";

            bindings = <
                &hl LCTRL R    &hl LALT S     &hl LGUI T     &hl LSHFT H        &hr RSHFT N    &hr RGUI A     &hr LALT I     &hr RCTRL O
                               &kp C          &kp G          &kp D              &kp L          &kp U          &kp Y
                                              &my_lt NUM SQT &my_lt NAV SPACE   &my_lt SYM E   &my_lt FUN TAB
            >;
        };
        numbers {
            label = "NUM";

            bindings = <
                &hl LCTRL PLUS &hl LALT MINUS &hl LGUI STAR  &hl LSHFT SLASH    &kp N4         &kp N5         &kp N6         &dotcol
                               &kp N9         &kp N8         &kp N7             &kp N1         &kp N2         &kp N3
                                              &trans         &trans             &kp E          &kp N0
            >;
        };
        navigation {
            label = "NAV";

            bindings = <
                &sk LCTRL      &sk LALT       &sk LGUI       &sk LSHFT          &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT
                               &kp C_VOL_UP   &kp PG_UP      &kp C_VOL_DN       &kp HOME       &kp PG_DN      &kp END
                                              &trans         &trans             &sk RALT       &trans
            >;
        };
        symbols {
            label = "SYM";

            bindings = <
                &kp EXCL       &kp AT         &kp HASH       &kp DOLLAR         &kp AMPERSAND  &kp ASTERISK   &kp PERCENT    &kp CARET
                               &kp GRAVE      &kp DQT        &kp UNDERSCORE     &kp BACKSLASH  &kp PIPE       &kp EQUAL
                                              &kp TILDE
                                              // Uncomment if you had a tone call here, removed:
                                              // &tone 4400
                                              &trans
                                              // Another tone call removed:
                                              // &tone 440
                                              &trans
            >;
        };
        function {
            label = "FUN";

            bindings = <
                &bootloader    &kp F12        &kp F11        &kp F10            &kp F4         &kp F5         &kp F6         &none
                               &kp F9         &kp F8         &kp F7             &kp F1         &kp F2         &kp F3
                                              &trans         &trans             &trans         &trans
            >;
        };

        bluetooth {
            label = "BT";
            bindings = <
                /* Row 1: Slots 0-4, previous slot, clear bondings */
                &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3
                &bt BT_SEL 4   &bt BT_PRV    &none          &none
                &none          &bt BT_CLR

                /* Row 2: system + volume + next, etc. */
                &sys_reset     &bootloader   &kp C_VOL_DN   &kp C_VOL_UP
                &kp C_MUTE     &bt BT_NXT    &kp C_BRI_DEC  &kp C_BRI_INC
                &bootloader    &sys_reset

                /* Row 3: more BT_CLR, soft off, etc. */
                            &bt BT_CLR    &none          &soft_off
                &soft_off      &none         &none

                /* Final (thumb) row */
                &trans         &none         &none          &trans
            >;
        };


        // Entire "buzz" layer commented out to remove PWM references:
        /*
        buzz {
            label = "BUZ";
            bindings = <
                &tone 1245     &tone 1109     &tone 932      &tone 831          &tone 784      &tone 880      &tone 988      &kp Q
                               &tone 740      &tone 622      &tone 554          &tone 587      &tone 659      &tone 698
                                              &tone 220      &tone 262          &tone 523      &tone 440
            >;
            // &tone 1047
        };
        */
    };
};
